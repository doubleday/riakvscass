package net.wooga.loadclient

import akka.actor.Actor
import scala.util.Random
import akka.event.Logging

object ContentInitializer {

  val userData = "{\"ca\"=>1370531420,\n \"sa\"=>1371111833,\n \"ua\"=>1371111856,\n \"st\"=>\"e42b70\",\n \"ti\"=>2,\n \"ps\"=>\"o/Sz0ZZeiM+x\",\n \"ss\"=>17,\n \"cn\"=>3552,\n \"ch\"=>50341,\n \"pr\"=>1564,\n \"mp\"=>1564,\n \"sr\"=>119,\n \"se\"=>\"01-01-05\",\n \"fi\"=>\"610660470\",\n \"en\"=>{\"s\"=>1371111855, \"u\"=>1},\n \"iv\"=>{\"i\"=>{\"1\"=>12, \"2\"=>6, \"4\"=>6, \"6\"=>6, \"7\"=>5}},\n \"ia\"=>{\"t\"=>13634426026065920},\n \"sc\"=>\n  [{\"i\"=>\"01-01-01\", \"s\"=>483244, \"m\"=>4762494, \"c\"=>3},\n   {\"i\"=>\"01-01-02\", \"s\"=>619341, \"m\"=>4843371, \"c\"=>3},\n   {\"i\"=>\"01-01-03\", \"s\"=>502560, \"m\"=>4508976, \"c\"=>3},\n   {\"i\"=>\"01-01-04\", \"s\"=>485677, \"m\"=>4802224, \"c\"=>3},\n   {\"i\"=>\"01-01-05\", \"s\"=>434370, \"m\"=>4549748, \"c\"=>3},\n   {\"i\"=>\"01-01-06\", \"s\"=>1, \"m\"=>2, \"c\"=>2},\n   {\"i\"=>\"01-02-01\", \"s\"=>609993, \"m\"=>6528306, \"c\"=>3},\n   {\"i\"=>\"01-02-02\", \"s\"=>603410, \"m\"=>8158651, \"c\"=>3},\n   {\"i\"=>\"01-02-03\", \"s\"=>544956, \"m\"=>8303931, \"c\"=>3},\n   {\"i\"=>\"01-02-04\", \"s\"=>628266, \"m\"=>8472677, \"c\"=>3},\n   {\"i\"=>\"01-02-05\", \"s\"=>537790, \"m\"=>4931057, \"c\"=>2},\n   {\"i\"=>\"01-02-06\", \"s\"=>1, \"m\"=>1, \"c\"=>1},\n   {\"i\"=>\"01-03-01\", \"s\"=>639999, \"m\"=>11495892, \"c\"=>3},\n   {\"i\"=>\"01-03-02\", \"s\"=>641932, \"m\"=>15003354, \"c\"=>3},\n   {\"i\"=>\"01-03-03\", \"s\"=>644039, \"m\"=>14777352, \"c\"=>3},\n   {\"i\"=>\"01-03-04\", \"s\"=>643737, \"m\"=>14886120, \"c\"=>3},\n   {\"i\"=>\"01-03-05\", \"s\"=>641539, \"m\"=>15135180, \"c\"=>3},\n   {\"i\"=>\"01-03-06\", \"s\"=>1, \"m\"=>1, \"c\"=>2},\n   {\"i\"=>\"01-04-01\", \"s\"=>635170, \"m\"=>15117312, \"c\"=>3},\n   {\"i\"=>\"01-04-02\", \"s\"=>640932, \"m\"=>24592457, \"c\"=>3},\n   {\"i\"=>\"01-04-03\", \"s\"=>644031, \"m\"=>19506882, \"c\"=>3},\n   {\"i\"=>\"01-04-04\", \"s\"=>644336, \"m\"=>19883931, \"c\"=>3},\n   {\"i\"=>\"01-04-05\", \"s\"=>642777, \"m\"=>19883369, \"c\"=>3},\n   {\"i\"=>\"01-04-06\", \"s\"=>1, \"m\"=>1, \"c\"=>2},\n   {\"i\"=>\"01-05-01\", \"s\"=>636186, \"m\"=>17043601, \"c\"=>3},\n   {\"i\"=>\"01-05-02\", \"s\"=>645114, \"m\"=>21821725, \"c\"=>3},\n   {\"i\"=>\"01-05-03\", \"s\"=>649566, \"m\"=>21582424, \"c\"=>3},\n   {\"i\"=>\"01-05-04\", \"s\"=>649983, \"m\"=>22294613, \"c\"=>3}],\n \"ii\"=>\n  [{\"x\"=>31, \"y\"=>26, \"t\"=>88, \"l\"=>3, \"cf\"=>1371062538},\n   {\"x\"=>32, \"y\"=>25, \"t\"=>92},\n   {\"x\"=>33, \"y\"=>24, \"t\"=>83},\n   {\"x\"=>26, \"y\"=>23, \"t\"=>46},\n   {\"x\"=>31, \"y\"=>25, \"t\"=>90},\n   {\"x\"=>21, \"y\"=>24, \"t\"=>17},\n   {\"x\"=>30, \"y\"=>29, \"t\"=>17},\n   {\"x\"=>30, \"y\"=>26, \"t\"=>90},\n   {\"x\"=>27, \"y\"=>32, \"t\"=>25, \"l\"=>3, \"cf\"=>1371063873},\n   {\"x\"=>29, \"y\"=>31, \"t\"=>17},\n   {\"x\"=>32, \"y\"=>24, \"t\"=>17},\n   {\"x\"=>30, \"y\"=>20, \"t\"=>101},\n   {\"x\"=>25, \"y\"=>29, \"t\"=>71, \"l\"=>3, \"cf\"=>1371063871},\n   {\"x\"=>28, \"y\"=>31, \"t\"=>17},\n   {\"x\"=>28, \"y\"=>30, \"t\"=>17},\n   {\"x\"=>26, \"y\"=>33, \"t\"=>17},\n   {\"x\"=>26, \"y\"=>34, \"t\"=>17},\n   {\"x\"=>30, \"y\"=>21, \"t\"=>101},\n   {\"x\"=>23, \"y\"=>20, \"t\"=>101},\n   {\"x\"=>29, \"y\"=>30, \"t\"=>17},\n   {\"x\"=>26, \"y\"=>24, \"t\"=>66, \"f\"=>1370614366, \"l\"=>2, \"cf\"=>1371063870},\n   {\"x\"=>21, \"y\"=>25, \"t\"=>17},\n   {\"x\"=>28, \"y\"=>27, \"t\"=>17},\n   {\"x\"=>29, \"y\"=>27, \"t\"=>17},\n   {\"x\"=>27, \"y\"=>27, \"t\"=>17},\n   {\"x\"=>26, \"y\"=>27, \"t\"=>17},\n   {\"x\"=>27, \"y\"=>28, \"t\"=>17},\n   {\"x\"=>23, \"y\"=>26, \"t\"=>17},\n   {\"x\"=>26, \"y\"=>32, \"t\"=>17},\n   {\"x\"=>26, \"y\"=>28, \"t\"=>17},\n   {\"x\"=>29, \"y\"=>26, \"t\"=>17},\n   {\"x\"=>30, \"y\"=>27, \"t\"=>17},\n   {\"x\"=>30, \"y\"=>28, \"t\"=>17},\n   {\"x\"=>29, \"y\"=>25, \"t\"=>17},\n   {\"x\"=>29, \"y\"=>24, \"t\"=>17},\n   {\"x\"=>30, \"y\"=>25, \"t\"=>17},\n   {\"x\"=>30, \"y\"=>24, \"t\"=>17},\n   {\"x\"=>27, \"y\"=>23, \"t\"=>46},\n   {\"x\"=>28, \"y\"=>23, \"t\"=>46},\n   {\"x\"=>25, \"y\"=>26, \"t\"=>46},\n   {\"x\"=>25, \"y\"=>25, \"t\"=>46},\n   {\"x\"=>25, \"y\"=>24, \"t\"=>46},\n   {\"x\"=>25, \"y\"=>23, \"t\"=>46},\n   {\"x\"=>31, \"y\"=>24, \"t\"=>17},\n   {\"x\"=>25, \"y\"=>27, \"t\"=>85},\n   {\"x\"=>25, \"y\"=>28, \"t\"=>46},\n   {\"x\"=>29, \"y\"=>23, \"t\"=>46},\n   {\"x\"=>29, \"y\"=>22, \"t\"=>46},\n   {\"x\"=>30, \"y\"=>22, \"t\"=>46},\n   {\"x\"=>30, \"y\"=>23, \"t\"=>46},\n   {\"x\"=>23, \"y\"=>23, \"t\"=>16},\n   {\"x\"=>34, \"y\"=>23, \"t\"=>45},\n   {\"x\"=>34, \"y\"=>20, \"t\"=>18},\n   {\"x\"=>34, \"y\"=>22, \"t\"=>45},\n   {\"x\"=>34, \"y\"=>21, \"t\"=>45},\n   {\"x\"=>31, \"y\"=>21, \"t\"=>67, \"f\"=>1370614326, \"l\"=>2, \"cf\"=>1370538692},\n   {\"x\"=>29, \"y\"=>20, \"t\"=>101},\n   {\"x\"=>26, \"y\"=>20, \"t\"=>101},\n   {\"x\"=>31, \"y\"=>20, \"t\"=>101},\n   {\"x\"=>27, \"y\"=>21, \"t\"=>81},\n   {\"x\"=>25, \"y\"=>32, \"t\"=>12},\n   {\"x\"=>25, \"y\"=>33, \"t\"=>12},\n   {\"x\"=>25, \"y\"=>34, \"t\"=>12},\n   {\"x\"=>27, \"y\"=>20, \"t\"=>101},\n   {\"x\"=>28, \"y\"=>20, \"t\"=>101},\n   {\"x\"=>24, \"y\"=>20, \"t\"=>101},\n   {\"x\"=>29, \"y\"=>21, \"t\"=>49},\n   {\"x\"=>33, \"y\"=>20, \"t\"=>19},\n   {\"x\"=>32, \"y\"=>20, \"t\"=>19},\n   {\"x\"=>20, \"y\"=>20, \"t\"=>51, \"l\"=>1, \"cf\"=>1370538779},\n   {\"x\"=>25, \"y\"=>20, \"t\"=>101},\n   {\"x\"=>20, \"y\"=>23, \"t\"=>101},\n   {\"x\"=>20, \"y\"=>24, \"t\"=>101},\n   {\"x\"=>21, \"y\"=>23, \"t\"=>17},\n   {\"x\"=>22, \"y\"=>23, \"t\"=>17},\n   {\"x\"=>22, \"y\"=>26, \"t\"=>17},\n   {\"x\"=>23, \"y\"=>22, \"t\"=>17},\n   {\"x\"=>23, \"y\"=>21, \"t\"=>17},\n   {\"x\"=>24, \"y\"=>23, \"t\"=>17},\n   {\"x\"=>24, \"y\"=>31, \"t\"=>17},\n   {\"x\"=>24, \"y\"=>34, \"t\"=>17},\n   {\"x\"=>26, \"y\"=>22, \"t\"=>17},\n   {\"x\"=>24, \"y\"=>24, \"t\"=>17},\n   {\"x\"=>24, \"y\"=>25, \"t\"=>17},\n   {\"x\"=>24, \"y\"=>26, \"t\"=>17},\n   {\"x\"=>24, \"y\"=>27, \"t\"=>17},\n   {\"x\"=>24, \"y\"=>32, \"t\"=>17},\n   {\"x\"=>24, \"y\"=>33, \"t\"=>17},\n   {\"x\"=>26, \"y\"=>21, \"t\"=>17},\n   {\"x\"=>22, \"y\"=>24, \"t\"=>78},\n   {\"x\"=>28, \"y\"=>28, \"t\"=>79},\n   {\"x\"=>22, \"y\"=>32, \"t\"=>61},\n   {\"x\"=>24, \"y\"=>21, \"t\"=>72}]}"

  case class CreateUsers(from: Int, to: Int)

  case object Done
  case object Error
}

class ContentInitializer extends Actor {

  import ContentInitializer._

  val log = Logging(context.system, this)

  lazy val dbAccessor = context.actorFor("akka://LoadTest/user/MasterControl/DbAccessor")

  val queueSize = Config.riakBucket.size * 2
  var usersToCreate = 0
  var nextUserId = 0

  def nextUserName() = {
    nextUserId += 1
    nextUserId.toString
  }

  def createUser() {
    val userId = nextUserName()
    val userValue: String = userData
    dbAccessor ! DbAccessor.Write(Random.nextLong(), userId, userValue)
  }

  def receive = {
    case CreateUsers(from, to) => {
      nextUserId    = from
      usersToCreate = to - from
      (from until from + queueSize).foreach( (i) => createUser() )
    }

    case DbAccessor.Response(_,_,_) => {
      usersToCreate -= 1
      Stats.userCreatedCounter.inc()

      if (usersToCreate > 0) createUser()
      else {
        context.parent ! Done
        context.stop(self)
      }
    }
    case DbAccessor.Failure(_,error) => {
      log.error(error)
      context.parent ! Error
      context.stop(self)
    }
  }

}
